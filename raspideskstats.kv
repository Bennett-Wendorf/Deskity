# #:kivy !
#:import getDtObj helpers.Helpers.getDateTimeObj
#:import DownloadStatus integrations.ToDoIntegrations.ToDoWidget.DownloadStatus
<MainBoxLayout>:
    orientation: "horizontal"
    padding: 3
    spacing: 5
    canvas.before:
        Color:
            rgb: .1, .1, .1
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: "vertical"
        WeatherWidget:
        SpotifyWidget:
    ToDoWidget:
        id: to_do_widget

<ToDoWidget>:
    item_height: 60
    item_height_fraq: self.item_height/self.height
    recycle_view_max_height: (self.height - self.item_height)
    MDSpinner:
        id: to_do_loading_indicator
        size_hint: (.25, .25)
        pos_hint: {'center_x': .5, 'center_y': .5}
        disabled: False if root.download_status == DownloadStatus.loading else True
        opacity: 1 if root.download_status == DownloadStatus.loading else 0
    Label:
        id: to_do_auth_indicator
        text: "Open your browser to sign in"
        disabled: False if root.download_status == DownloadStatus.auth else True
        opacity: 1 if root.download_status == DownloadStatus.auth else 0 
    RelativeLayout:
        # orientation: 'vertical'
        MDRoundFlatIconButton:
            id: to_do_dropdown_label
            size_hint_y: None
            height: root.item_height
            text: "Hide Completed Tasks" if root.complete_visibility else "Show Completed Tasks"
            icon: 'chevron-up' if root.complete_visibility else 'chevron-down'
            pos_hint: {'center_y': (1-((root.item_height_fraq)/2)), 'center_x': 0.5}
            on_release: root.Toggle_Complete_Visibility()
        RecycleView:
            id: to_do_recycle_view
            name: 'to_do_widget'
            disabled: False if root.download_status == DownloadStatus.done_loading else True
            opacity: 1 if root.download_status == DownloadStatus.done_loading else 0
            orientation: 'vertical'
            data: [x for x in root.to_do_tasks if x['isVisible']]
            viewclass: 'TaskItem'
            pos_hint: {'top': (1-(root.item_height_fraq))}
            size_hint_y: None
            calc_height: (root.item_height * len(self.data))
            height: dp(self.calc_height) if self.calc_height < root.recycle_view_max_height else dp(root.recycle_view_max_height)
            RecycleBoxLayout:
                id: to_do_recycle_box_layout
                default_size: None, dp(root.item_height)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'

<WeatherWidget>:
    id: weather_widget
    orientation: "horizontal"
    weather_icon: weather_icon
    AsyncImage:
        id: weather_icon
        source: None
        pos_hint: {'center_x': 0.175, 'center_y': 0.5}
        size_hint: 0.35, 0.4
    Label:
        text: str(int(root.Get_Temp())) + "°"
        text_size: self.width, self.height
        font_size: self.height * 0.5
        valign: 'center'
        halign: 'center'
        size_hint: 0.65, 0.55
        pos_hint: {'center_x': 0.675, 'center_y': 0.65}
    Label:
        text: "Feels like: " + str(int(root.Get_Feels())) + "°"
        text_size: self.width, self.height
        font_size: self.height * 0.5
        valign: 'center'
        halign: 'center'
        size_hint: 0.65, 0.2
        pos_hint: {'center_x': 0.675, 'center_y': 0.25}

<TaskItem>:
    name: "Task Item"
    detect_visible: False # This is needed for the hover behavior to continue to work in a RelativeLayout
    canvas:
        Color:
            rgba: .8, .8, .8, 1
        Line:
            points: self.x, self.y, self.width, self.y
            width: 1
    CheckBox:
        id: checkbox
        pos_hint: {'center_x': 0.07, 'center_y': 0.5}
        size_hint_x: .1
        size_hint_y: .9 if root.isVisible else None
        height: 1 if root.isVisible else '0dp'
        active: True if root.status == 'completed' else False
        # TODO: Consider adding a rule for the 'disabled' property of this widget
        background_checkbox_normal: 'atlas://res/icons/custom_atlas/blue_check_unchecked'
        background_checkbox_down: 'atlas://res/icons/custom_atlas/blue_check'
    Label:
        pos_hint: {'center_x': 0.57, 'center_y': 0.68} if root.dueDateTime != None else {'center_x': 0.57, 'center_y': 0.5}
        size_hint_x: .86
        size_hint_y: .9 if root.isVisible else None
        text: root.title
        text_size: self.width, self.height
        font_size: self.height * 0.55
        valign: 'center'
        shorten: True
        shorten_from: 'right'
    Label:
        pos_hint: {'center_x': 0.57, 'center_y': 0.22}
        size_hint_x: 0.86
        size_hint_y: .9 if (root.isVisible) else None
        text: getDtObj(root.dueDateTime['dateTime']).strftime("%a, %b %-d, %Y") if root.dueDateTime != None else ""
        text_size: self.width, self.height
        font_size: self.height * 0.4
        color: .8, .8, .8, 1
        valign: 'center'
        shorten: True
        shorten_from: 'right'